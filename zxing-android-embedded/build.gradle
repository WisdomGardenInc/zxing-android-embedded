apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

ext.artifactId = 'zxing-android-embedded'


// Publishing config from https://getstream.io/blog/publishing-libraries-to-mavencentral-2021/

// 获取nexus 的账号和密码
def getNexusInfo() {
    def nexusName = System.getenv('NEXUS_NAME');
    def nexusPassword = System.getenv('NEXUS_PASSWORD')
    File secretPropsFile = project.rootProject.file('local.properties')
    if (secretPropsFile.exists()) {
        FileInputStream inputStream = null
        try {
            inputStream = new FileInputStream(secretPropsFile)
            Properties p = new Properties()
            p.load(inputStream)
            nexusName = p.getProperty('NEXUS_NAME') ?: nexusName
            nexusPassword = p.getProperty('NEXUS_PASSWORD') ?: nexusPassword
        } catch (IOException e) {
            throw new GradleException("Error reading file: ${secretPropsFile.absolutePath}", e)
        } finally {
            if (inputStream != null) {
                try {
                    inputStream.close()
                } catch (IOException ignored) {
                    // do something
                }
            }
        }
    }
    return [nexusName, nexusPassword]
}

def (nexusName, nexusPassword) = getNexusInfo();
println "LOCAL_NEXUS_INFO: ${nexusName}|${nexusPassword}"

dependencies {
    api project.zxingCore

    implementation 'androidx.core:core:1.6.0'
    implementation 'androidx.fragment:fragment:1.3.6'

    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.mockito:mockito-core:1.9.5'
}

android {
    resourcePrefix 'zxing_'
    compileSdkVersion project.androidTargetSdk

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res-orig', 'res']
            assets.srcDirs = ['assets']
        }
        test.setRoot('test')
    }

    // This is bad practice - we should fix the warnings instead.
    lintOptions {
        // Android warns about the he and id locale folders. he -> iw is already handled with a
        // symlink. TODO: what about id?
        disable 'LocaleFolder'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        // We test with primitives such as Rect, and rely on their default behaviour working.
        unitTests.returnDefaultValues = true
    }

    defaultConfig {
        minSdkVersion 19
    }

    buildTypes {
        debug {
            versionNameSuffix ".debug"
            resValue "string", "app_version", "${defaultConfig.versionName}${versionNameSuffix}"
        }
        release {
            resValue "string", "app_version", "${defaultConfig.versionName}"
        }
    }
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

project.afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                artifact bundleReleaseAar
                artifactId project.artifactId

                artifact sourceJar

                pom {
                    name = project.artifactId
                    description = 'Barcode scanner library for Android, based on the ZXing decoder'
                    url = 'https://github.com/WisdomGardenInc/zxing-android-embedded'

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'https://github.com/WisdomGardenInc/zxing-android-embedded/blob/master/COPYING'
                        }
                    }

                    developers {
                        developer {
                            id = ''
                            name = 'TC Mobile'
                            organization = 'WisdomGardenInc, Inc'
                            organizationUrl = 'https://wisdomgarden.com'
                        }
                    }
                }


                pom.withXml {
                    // HACK to add dependencies to POM.
                    // When maven-publish can do this automatically for Android projects,
                    // remove this section.
                    def deps = asNode().appendNode('dependencies')

                    project.configurations.api.allDependencies.each { dep ->
                        def node = deps.appendNode('dependency')
                        node.appendNode('groupId', dep.group)
                        node.appendNode('artifactId', dep.name)
                        node.appendNode('version', dep.version)
                        node.appendNode('scope', 'api')
                    }

                }
            }
        }

        repositories {
            maven {
                name "wg"
                url = "http://nexus.tronclass.com.cn:8081/repository/wg"
                allowInsecureProtocol = true
                credentials {
                    username nexusName ?: ''
                    password nexusPassword ?: ''
                }
            }
        }
    }
}
